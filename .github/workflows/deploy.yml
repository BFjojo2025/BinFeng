name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # リポジトリへの書き込み権限を明示的に付与

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Generate API
        run: npm run generate-api

      - name: Build
        run: npm run build
        # postbuildスクリプトで自動的にSEOファイル（sitemap.xml、robots.txt）が生成されます

      # 重要: .nojekyllファイルをルートに作成する
      - name: Create .nojekyll file
        run: |
          touch dist/.nojekyll
          echo "Created .nojekyll file"
          ls -la dist/

      # デバッグ：生成されたファイルを確認
      - name: Debug - Check generated files
        run: |
          echo "Checking dist directory content:"
          ls -la dist/

          if [ -f "dist/sitemap.xml" ]; then
            echo "✓ sitemap.xml exists"
            head -n 10 dist/sitemap.xml
          else
            echo "✗ sitemap.xml does not exist!"
          fi

          if [ -f "dist/robots.txt" ]; then
            echo "✓ robots.txt exists"
            cat dist/robots.txt
          else
            echo "✗ robots.txt does not exist!"
          fi

          # .nojekyllファイルの存在を明示的に確認
          if [ -f "dist/.nojekyll" ]; then
            echo "✓ .nojekyll exists"
          else
            echo "✗ .nojekyll does not exist!"
            echo "Creating it again to be sure..."
            touch dist/.nojekyll
          fi

      - name: Debug - Repository info
        run: |
          echo "Repository: ${{github.repository}}"
          echo "Actor: ${{github.actor}}"
          echo "Ref: ${{github.ref}}"

      # 確実にgh-pagesブランチを作成
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist  # ビルド出力ディレクトリ
          branch: gh-pages  # デプロイ先ブランチ
          clean: true  # デプロイ先ブランチをクリーン
          single-commit: true  # 単一のコミットにする
